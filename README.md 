# API de Scraping de Propiedades Inmobiliarias

API REST desarrollada en Node.js para extraer informaciÃ³n de propiedades inmobiliarias de diferentes portales chilenos.

## CaracterÃ­sticas

- âœ… Soporte para mÃºltiples portales inmobiliarios chilenos
- âœ… Portal Inmobiliario (portalinmobiliario.com)
- âœ… MercadoLibre Chile (casa.mercadolibre.cl)
- âœ… DetecciÃ³n automÃ¡tica del tipo de portal
- âœ… Respuesta en formato JSON
- âœ… Manejo de errores robusto
- âœ… Formateo automÃ¡tico de precios

## InstalaciÃ³n

1. Clona o descarga el proyecto
2. Instala las dependencias:

```bash
npm install
```

3. Instala los browsers de Playwright:

```bash
npx playwright install
```

## Uso

### Iniciar el servidor

```bash
# Modo producciÃ³n
npm start

# Modo desarrollo (con nodemon)
npm run dev
```

El servidor se ejecutarÃ¡ en `http://localhost:3000` por defecto.

## Endpoints

### POST /scrape-property

Extrae informaciÃ³n de una propiedad inmobiliaria.

**Body (JSON):**
```json
{
  "url": "https://casa.mercadolibre.cl/MLC-1589480029-casa-iluminada-5d-calle-tranquila-las-condes-_JM"
}
```

**Respuesta exitosa:**
```json
{
  "success": true,
  "data": {
    "titulo": "Casa Iluminada 5d Calle Tranquila Las Condes",
    "precio": "$850.000.000",
    "moneda": "$",
    "ubicacion": "Las Condes, RegiÃ³n Metropolitana",
    "dormitorios": "5 dormitorios",
    "banos": "4 baÃ±os",
    "superficie": "180 mÂ²",
    "link": "https://casa.mercadolibre.cl/...",
    "imagen": "https://..."
  },
  "portal": "mercadolibre"
}
```

**Respuesta con error:**
```json
{
  "success": false,
  "error": "DescripciÃ³n del error",
  "portal": "mercadolibre"
}
```

### GET /scrape-property

Alternativa usando query parameters para testing.

**Ejemplo:**
```
GET /scrape-property?url=https://casa.mercadolibre.cl/MLC-1589480029-casa-iluminada-5d-calle-tranquila-las-condes-_JM
```

### GET /health

Verifica el estado de la API.

**Respuesta:**
```json
{
  "status": "OK",
  "message": "API de Scraping de Propiedades funcionando correctamente",
  "timestamp": "2025-07-10T15:30:45.123Z"
}
```

## Ejemplos de uso

### Con curl

```bash
# POST request
curl -X POST http://localhost:3000/scrape-property \
  -H "Content-Type: application/json" \
  -d '{"url": "https://casa.mercadolibre.cl/MLC-1589480029-casa-iluminada-5d-calle-tranquila-las-condes-_JM"}'

# GET request
curl "http://localhost:3000/scrape-property?url=https://casa.mercadolibre.cl/MLC-1589480029-casa-iluminada-5d-calle-tranquila-las-condes-_JM"
```

### Con JavaScript (fetch)

```javascript
// POST request
const response = await fetch('http://localhost:3000/scrape-property', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    url: 'https://casa.mercadolibre.cl/MLC-1589480029-casa-iluminada-5d-calle-tranquila-las-condes-_JM'
  })
});

const data = await response.json();
console.log(data);
```

## Portales Soportados

### Portal Inmobiliario
- âœ… Listados de propiedades
- âœ… PÃ¡ginas de detalle
- âœ… ExtracciÃ³n de precio, ubicaciÃ³n, caracterÃ­sticas

### MercadoLibre Chile
- âœ… PÃ¡ginas de detalle de propiedades
- âœ… ExtracciÃ³n completa de datos
- âœ… Manejo de precios en UF y CLP

### Otros portales
- ðŸ”„ ExtracciÃ³n genÃ©rica para portales no reconocidos
- ðŸ”„ Se puede extender fÃ¡cilmente para nuevos portales

## Variables de Entorno

```bash
PORT=3000  # Puerto del servidor (opcional, default: 3000)
```

## Estructura del Proyecto

```
â”œâ”€â”€ server.js          # Archivo principal de la API
â”œâ”€â”€ package.json       # Dependencias y scripts
â”œâ”€â”€ README.md          # Este archivo
â””â”€â”€ node_modules/      # Dependencias instaladas
```

## Manejo de Errores

La API maneja varios tipos de errores:

- **400**: URL invÃ¡lida o faltante
- **500**: Errores internos del servidor
- **404**: Endpoint no encontrado

Todos los errores incluyen informaciÃ³n detallada en el JSON de respuesta.

## Limitaciones y Consideraciones

- El scraping depende de la estructura HTML de los sitios web
- Los sitios pueden implementar medidas anti-bot
- Se recomienda usar con moderaciÃ³n para evitar bloqueos
- Los selectores pueden cambiar si los sitios actualizan su estructura

## Contribuciones

Para agregar soporte a nuevos portales:

1. AÃ±ade la detecciÃ³n del portal en `detectarPortal()`
2. Crea una nueva funciÃ³n `extraer[NombrePortal]()`
3. Agrega el case correspondiente en `scrapearPropiedad()`

## Licencia

MIT License